#! /c/iverilog/bin/vvp
:ivl_version "0.9.7 " "(v0_9_7)";
:vpi_time_precision + 0;
:vpi_module "system";
:vpi_module "v2005_math";
:vpi_module "va_math";
S_00B78840 .scope module, "stimulus" "stimulus" 2 1;
 .timescale 0 0;
v009C3CB0_0 .var "carry_in", 0 0;
v009C3D08_0 .var "opcode", 0 2;
v00B7AB40_0 .net "overflow", 0 0, v00B7B8A0_0; 1 drivers
v00B7AB98_0 .net "result", 7 0, v00B7EEF0_0; 1 drivers
v00B7ABF0_0 .var "xIn", 7 0;
v00B7AC48_0 .var "yIn", 7 0;
S_00B78158 .scope module, "aluOperation" "ALU" 2 10, 2 51, S_00B78840;
 .timescale 0 0;
v00B7E4F0_0 .net "carry_in", 0 0, v009C3CB0_0; 1 drivers
v00B7B7F0_0 .var "carry_out", 0 0;
v00B7B848_0 .net "opcode", 0 2, v009C3D08_0; 1 drivers
v00B7B8A0_0 .var "overflow", 0 0;
v00B7EE98_0 .alias "result", 7 0, v00B7AB98_0;
v00B7EEF0_0 .var "temp", 7 0;
v00B7EF48_0 .net "x", 7 0, v00B7ABF0_0; 1 drivers
v009C3C58_0 .net "y", 7 0, v00B7AC48_0; 1 drivers
E_009B4438 .event edge, v00B7EEF0_0, v009C3C58_0, v00B7EF48_0;
    .scope S_00B78158;
T_0 ;
    %wait E_009B4438;
    %load/v 8, v00B7B848_0, 3;
    %cmpi/u 8, 2, 3;
    %jmp/0xz  T_0.0, 4;
    %load/v 8, v00B7EF48_0, 8;
    %load/v 16, v009C3C58_0, 8;
    %and 8, 16, 8;
    %set/v v00B7EEF0_0, 8, 8;
    %set/v v00B7B7F0_0, 0, 1;
T_0.0 ;
    %load/v 8, v00B7B848_0, 3;
    %cmpi/u 8, 3, 3;
    %jmp/0xz  T_0.2, 4;
    %load/v 8, v00B7EF48_0, 8;
    %load/v 16, v009C3C58_0, 8;
    %or 8, 16, 8;
    %set/v v00B7EEF0_0, 8, 8;
    %set/v v00B7B7F0_0, 0, 1;
T_0.2 ;
    %load/v 8, v00B7B848_0, 3;
    %cmpi/u 8, 1, 3;
    %mov 8, 4, 1;
    %load/v 9, v00B7E4F0_0, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_0.4, 8;
    %load/v 8, v00B7EF48_0, 8;
    %mov 16, 0, 1;
    %load/v 17, v009C3C58_0, 8;
    %mov 25, 0, 1;
    %add 8, 17, 9;
    %addi 8, 1, 9;
    %set/v v00B7EEF0_0, 8, 8;
    %set/v v00B7B7F0_0, 16, 1;
    %load/v 8, v00B7B7F0_0, 1;
    %set/v v00B7B8A0_0, 8, 1;
    %jmp T_0.5;
T_0.4 ;
    %load/v 8, v00B7B848_0, 3;
    %cmpi/u 8, 1, 3;
    %mov 8, 4, 1;
    %load/v 9, v00B7E4F0_0, 1;
    %cmpi/u 9, 0, 1;
    %mov 9, 4, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_0.6, 8;
    %load/v 8, v00B7EF48_0, 8;
    %mov 16, 0, 1;
    %load/v 17, v009C3C58_0, 8;
    %mov 25, 0, 1;
    %add 8, 17, 9;
    %set/v v00B7EEF0_0, 8, 8;
    %set/v v00B7B7F0_0, 16, 1;
    %load/v 8, v00B7B7F0_0, 1;
    %set/v v00B7B8A0_0, 8, 1;
T_0.6 ;
T_0.5 ;
    %load/v 8, v00B7B848_0, 3;
    %cmpi/u 8, 4, 3;
    %jmp/0xz  T_0.8, 4;
    %load/v 8, v00B7EF48_0, 8;
    %mov 16, 0, 1;
    %inv 8, 9;
    %addi 8, 1, 9;
    %load/v 17, v009C3C58_0, 8;
    %mov 25, 0, 1;
    %add 8, 17, 9;
    %set/v v00B7EEF0_0, 8, 8;
    %set/v v00B7B7F0_0, 16, 1;
    %load/v 8, v00B7B7F0_0, 1;
    %set/v v00B7B8A0_0, 8, 1;
T_0.8 ;
    %load/v 8, v00B7B848_0, 3;
    %cmpi/u 8, 0, 3;
    %jmp/0xz  T_0.10, 4;
    %load/v 8, v009C3C58_0, 8;
    %set/v v00B7EEF0_0, 8, 8;
T_0.10 ;
    %jmp T_0;
    .thread T_0, $push;
    .scope S_00B78840;
T_1 ;
    %movi 8, 162, 8;
    %set/v v00B7ABF0_0, 8, 8;
    %movi 8, 128, 8;
    %set/v v00B7AC48_0, 8, 8;
    %set/v v009C3CB0_0, 1, 1;
    %movi 8, 1, 3;
    %set/v v009C3D08_0, 8, 3;
    %delay 5, 0;
    %vpi_call 2 17 "$display", "\012 ADD Operation With carry";
    %delay 5, 0;
    %vpi_call 2 18 "$display", "Input1 = %b Input2 = %b Output = %b Overflow = %b ", v00B7ABF0_0, v00B7AC48_0, v00B7AB98_0, v00B7AB40_0;
    %movi 8, 34, 8;
    %set/v v00B7ABF0_0, 8, 8;
    %movi 8, 64, 8;
    %set/v v00B7AC48_0, 8, 8;
    %set/v v009C3CB0_0, 0, 1;
    %movi 8, 1, 3;
    %set/v v009C3D08_0, 8, 3;
    %delay 10, 0;
    %vpi_call 2 22 "$display", "\012 ADD Operation without carry";
    %delay 10, 0;
    %vpi_call 2 23 "$display", "Input1 = %b Input2 = %b Output = %b Overflow = %b ", v00B7ABF0_0, v00B7AC48_0, v00B7AB98_0, v00B7AB40_0;
    %movi 8, 34, 8;
    %set/v v00B7ABF0_0, 8, 8;
    %movi 8, 226, 8;
    %set/v v00B7AC48_0, 8, 8;
    %set/v v009C3CB0_0, 0, 1;
    %movi 8, 2, 3;
    %set/v v009C3D08_0, 8, 3;
    %delay 15, 0;
    %vpi_call 2 27 "$display", "\012 AND Operation";
    %delay 15, 0;
    %vpi_call 2 28 "$display", "Input1 = %b Input2 = %b Output = %b Overflow = %b ", v00B7ABF0_0, v00B7AC48_0, v00B7AB98_0, v00B7AB40_0;
    %movi 8, 34, 8;
    %set/v v00B7ABF0_0, 8, 8;
    %movi 8, 224, 8;
    %set/v v00B7AC48_0, 8, 8;
    %set/v v009C3CB0_0, 0, 1;
    %movi 8, 4, 3;
    %set/v v009C3D08_0, 8, 3;
    %delay 20, 0;
    %vpi_call 2 32 "$display", "\012 SUB Operation";
    %delay 20, 0;
    %vpi_call 2 33 "$display", "Input1 = %b Input2 = %b Output = %b Overflow = %b ", v00B7ABF0_0, v00B7AC48_0, v00B7AB98_0, v00B7AB40_0;
    %movi 8, 35, 8;
    %set/v v00B7ABF0_0, 8, 8;
    %movi 8, 160, 8;
    %set/v v00B7AC48_0, 8, 8;
    %set/v v009C3CB0_0, 0, 1;
    %movi 8, 3, 3;
    %set/v v009C3D08_0, 8, 3;
    %delay 25, 0;
    %vpi_call 2 37 "$display", "\012 OR Operation";
    %delay 25, 0;
    %vpi_call 2 38 "$display", "Input1 = %b Input2 = %b Output = %b Overflow = %b ", v00B7ABF0_0, v00B7AC48_0, v00B7AB98_0, v00B7AB40_0;
    %movi 8, 34, 8;
    %set/v v00B7ABF0_0, 8, 8;
    %movi 8, 224, 8;
    %set/v v00B7AC48_0, 8, 8;
    %set/v v009C3CB0_0, 0, 1;
    %set/v v009C3D08_0, 0, 3;
    %delay 30, 0;
    %vpi_call 2 42 "$display", "\012 MOV Operation";
    %delay 30, 0;
    %vpi_call 2 43 "$display", "Input1 = %b Input2 = %b Output = %b Overflow = %b ", v00B7ABF0_0, v00B7AC48_0, v00B7AB98_0, v00B7AB40_0;
    %end;
    .thread T_1;
# The file index is used to find the file name in the following table.
:file_names 3;
    "N/A";
    "<interactive>";
    "ALU.v";
